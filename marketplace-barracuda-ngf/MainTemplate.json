{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "0.0.1",
  "parameters": {
    "fwVmName": {
      "type": "string",
      "metadata": {
        "description": "Firewall Name"
      }
    },
    "fwVmVersion": {
      "type": "string",
      "metadata": {
        "description": "Firmware version"
      },
      "defaultValue": "latest"
    },
    "fwVmSku": {
      "type": "string",
      "metadata": {
        "description": "License scheme"
      },
      "defaultValue": "hourly"
    },
    "fwVmSize": {
      "type": "string",
      "metadata": {
        "description": "firewall VM size"
      }
    },
    "fwVmAddress": {
      "type": "string",
      "metadata": {
        "description": "Barracuda CloudGen Firewall private IP address"
      }
    },
    "publicIp": {
      "type": "object",
      "metadata": {
        "description": "Public IP object"
      }
    },
    "newStorageAccount": {
      "type": "object",
      "metadata": {
        "description": "New storage account object"
      },
      "defaultValue": {}
    },
    "vnet": {
      "type": "object",
      "metadata": {
        "description": "VNet and subnet object"
      }
    },
    "ccIpAddress": {
      "type": "string",
      "metadata": {
        "description": "IP Address of Control Center"
      },
      "defaultValue": ""
    },
    "ccClusterName": {
      "type": "string",
      "metadata": {
        "description": "Control Center Cluster name"
      },
      "defaultValue": ""
    },
    "ccRangeId": {
      "type": "string",
      "metadata": {
        "description": "Control Center Range ID"
      },
      "defaultValue": ""
    },
    "ccSecret": {
      "type": "string",
      "metadata": {
        "description": "PAR file retrieval key"
      },
      "defaultValue": ""
    },
    "fwParFileUrl": {
      "type": "string",
      "metadata": {
        "description": "Configuration backup PAR file"
      },
      "defaultValue": ""
    },
    "fwSshEnable": {
      "type": "string",
      "metadata": {
        "description": "SSH management access enabled"
      },
      "defaultValue": "0"
    },
    "fwSshKey": {
      "type": "secureString",
      "metadata": {
        "description": "SSH public key"
      },
      "defaultValue": ""
    },
    "fwPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Root password"
      },
      "defaultValue": ""
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Azure region to deploy"
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "description": "The base URL for dependent assets",
        "artifactsBaseUrl": ""
      },
      "defaultValue": "https://raw.githubusercontent.com/bartekmo/ng-azure/ngf2/marketplace-barracuda-ngf"
    }
  },
  "variables": {
    "apiVersion": {
      "Compute": "2017-12-01",
      "Network": "2017-10-01",
      "Resources": "2017-05-10"
    },
    "publicIpHolder0": "[if( equals(parameters( 'publicIp' ).newOrExistingOrNone, 'existing' ), parameters( 'publicIp').domainNameLabel, '' )]",
    "publicIpRef": "[if( equals( parameters( 'publicIp' ).newOrExistingOrNone, 'new' ), parameters( 'publicIp').domainNameLabel, '' )]",
    "fwSubnetRefFromParam": "[concat( resourceId( parameters( 'vnet' ).resourceGroup, 'Microsoft.Network/virtualNetworks', parameters( 'vnet' ).name ), '/subnets/', parameters( 'vnet' ).subnets.fwSubnet.name )]"
  },
  "resources": [
    {
      "name": "vNet",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables( 'apiVersion' ).Resources ]",
      "condition": "[equals( parameters( 'vnet' ).newOrExisting, 'new' )]",
      "properties": {
        "templateLink": {
          "uri": "[concat( parameters( 'baseUrl'), '/vnet.json' )]"
        },
        "parameters": {
            "apiVersion": "[variables( 'apiVersion' )]"
        }
      }
    },
    {
      "name": "publicIp",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables( 'apiVersion' ).Resources ]",
      "properties": {
        "templateLink": {
          "uri": "[concat( parameters( 'baseUrl'), '/pip.json' )]"
        },
        "mode": "[deployment().properties.mode]",
        "parameters": {
            "apiVersion": {
              "value": "[variables( 'apiVersion' )]"
            },
            "location": {
              "value": "[parameters( 'location' )]"
            },
            "pip": {
              "value": "[parameters( 'publicIp' )]"
            }
        }
      }
    },
    {
      "name": "firewallNic",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables( 'apiVersion' ).Resources ]",
      "dependsOn": [
        "[resourceId( 'Microsoft.Resources/deployments', 'vNet' )]",
        "[resourceId( 'Microsoft.Resources/deployments', 'publicIp' )]"
      ],
      "properties": {
        "templateLink": {
          "uri": "[concat( parameters( 'baseUrl'), '/nic.json' )]"
        },
        "mode": "Incremental",
        "parameters": {
          "apiVersion": {
            "value": "[variables( 'apiVersion' )]"
          },
          "location": {
            "value": "[parameters( 'location' )]"
          },
          "nicName": {
            "value": "[concat( parameters( 'fwVmName' ), '-nic0' )]"
          },
          "publicIpRef": {
            "value": "[reference( 'publicIp' ).outputs.selfLink.value ]"
          },
          "fwVmAddress": {
            "value": "[parameters( 'fwVmAddress' )]"
          },
          "fwSubnetRef": {
            "value": "[if( equals( parameters( 'vnet' ).newOrExisting, 'existing' ), variables( 'fwSubnetRefFromParam' ), '' )]"
          }
        }
      }
    },
    {
      "name": "firewallInstance",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables( 'apiVersion' ).Resources ]",
      "condition": false,
      "dependsOn": [
        "[resourceId( 'Microsoft.Resources/deployments', 'firewallNic' )]"
      ],
      "properties": {
        "templateLink": {
          "uri": "[concat( parameters( 'baseUrl'), '/fw.json' )]"
        },
        "parameters": {
          "apiVersion": {
            "value": "[variables( 'apiVersion' )]"
          },
          "location": {
            "value": "[parameters( 'location' )]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
